services:
  mysql-app:
    image: mysql:latest
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - dlink_net

  spring-app:
    image: spring-boot-app:dev
    build:
      context: ./spring-app/
      dockerfile: Dockerfile-dev
    restart: always
    depends_on:
      - mysql-app
    ports:
      - "9999:9999"
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_SERVER_PORT: ${SPRING_SERVER_PORT}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      SPRING_JWT_SECRET_KEY: ${SPRING_JWT_SECRET_KEY}
      GOOGLE_CLIENT_ID: 970845425114-9epcg0mr596efr76a5s6hqs6u2jstf8p.apps.googleusercontent.com
      GOOGLE_CLIENT_SECRET: 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
      KAKAO_REST_API_KEY: 69a4f6064597e6f48faa3e1ac1d582fe
      NAVER_CLIENT_ID: RGk68q3Hw8BpaskN4zZD
      NAVER_SECRET_ID: uzYXxASfEn

    volumes:
      - ./spring-app/build/:/app/build
      - ./spring-app/src:/app/src
    networks:
      - dlink_net

  next-app:
    image: next-app:dev
    build:
      context: ./next-app/
      dockerfile: Dockerfile-dev
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: ${NODE_ENV}
    networks:
      - dlink_net
    volumes:
      - ./next-app:/app
      # - /app/node_modules # node_modules는 컨테이너에서 관리

volumes:
  mysql_data:

networks:
  dlink_net:
