name: CI Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build-backend:
    name: Build & Test Spring Boot
    runs-on: self-hosted

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v3

      - name: JDK 17 설정
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Gradle 빌드 & 테스트
        run: |
          cd spring-app
          chmod +x gradlew
          ./gradlew build --no-daemon

  build-frontend:
    name: Build & Test Next.js
    runs-on: self-hosted

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v3

      - name: Node.js 설정
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Next.js 빌드 & 테스트
        run: |
          cd next-app
          npm install
          npm run lint
          npm run build

  test-kafka:
    name: Test Kafka Consumers
    runs-on: self-hosted

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v3

      - name: Python 환경 설정
        run: |
          cd kafka/consumer
          python3 -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          pytest

  docker-build-push:
    name: Build & Push Docker Images
    runs-on: self-hosted
    needs: [build-backend, build-frontend, test-kafka]

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v3

      - name: Docker 빌드 & 태깅
        run: |
          docker build -t harbor.local/dlink-backend:latest ./spring-app
          docker build -t harbor.local/dlink-frontend:latest ./next-app

      - name: Harbor 로그인
        run: echo "${{ secrets.HARBOR_PASSWORD }}" | docker login harbor.local -u ${{ secrets.HARBOR_USERNAME }} --password-stdin

      - name: Docker 이미지 푸시
        run: |
          docker push harbor.local/dlink-backend:latest
          docker push harbor.local/dlink-frontend:latest
